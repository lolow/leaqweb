- unless @state=="solved"
  :javascript
    setTimeout(function(){location.reload();}, 15000);
:javascript
  function import_res(new_result_set_path,id) {
    var sim_id = $('#sim_' +id+ ' option:selected')[0].value
    if(sim_id=="0"){
      location.href=new_result_set_path;
      return false;
    }
    $.blockUI({ message: '<b>Please wait...</b>',
      css: { border: 'none',
        padding: '15px',
        backgroundColor: '#000',
        opacity: .5,
        color: '#fff'
      }});
    location.href = '/result_sets/' + sim_id + '/import?solver_id=' + id;
  }
.grid_2
  .box
    %h2 Action
    .block
      %p
        = link_to 'Browse', solver_jobs_path, :class => "action browse"
        -#= link_to @solver.solved? ? "Delete" : "Kill", @solver, :method=>:delete, :confirm => "Are you sure?", :class => "action delete"
      -# if @solver.solved? && @solver.has_files?
        %p
          = link_to_function("Import into ResultSet",
            "import_res(#{new_result_set_path.to_json},#{@solver.id})" , :class => "action delete")
          = select_tag "sim_#{@solver.id}", options_for_select([['New ResultSet',0]]+@result_sets.map {|o| [o.name,o.id]})
  .box
    %h2 parameters
    %block
      %p
        %br
        Language: #{@solver_job.language}
        %br
        Scenario(s): #{@solver_job.scenarios}

.grid_10
  .box
    %h2
      Status:
      = @state
      - if ( @state=="solving" || @state.start_with?("generating") )
        =  image_tag("solving.gif",:align=>:absmiddle,:height=>"9px")
    .block
      - if @state=="solved"
        %p Total time resolution: (#{@solver_job.etem_solver.time_used} sec)
      #log
        %h5 Log
        #display_log
          %pre= raw sanitize @solver_job.etem_solver.read(:log)
