***********************
*                     *
* ETEM model for LEAQ *
*                     *
***********************
* Date     : 01/2011
* Version  : 1.0
* Authors  : L. Drouet
* Language : GAMS
* command  : gams etem.gms

$INCLUDE '#{@f_inc}'

ALIAS(T,T1);
ALIAS(C,C1);
ALIAS(FLOW,INFLOW);
ALIAS(FLOW,OUTFLOW);

Variable
  VAR_OBJ          Objective value
;

Positive Variables
  VAR_OBJINV       Investment part of objective function
  VAR_OBJFIX       Fixed costs part of objective function
  VAR_OBJVAR       Variable costs part of objective function
  VAR_OBJSAL       Salvage value part of objective function
  VAR_ICAP(T,P)    Investment in new capacity
  VAR_IMP(T,S,IMP) Import activities
  VAR_EXP(T,S,EXP) Export activities
  VAR_COM(T,S,P,C) Commodity flow
;

Equations
  EQ_OBJ     Objective function
  EQ_OBJINV  Investment part of objective function
  EQ_OBJFIX  Fixed costs part of objective function
  EQ_OBJVAR  Variable costs part of objective function.
  EQ_OBJSAL  Salvage value part of objective function.
  EQ_COMBAL  Basic commodity balance equations
  EQ_DEMBAL  Demand balance equations
  EQ_CAPACT  Capacity utilization equation
  EQ_PTRANS  Flow transformation constraint
  EQ_SHR_LO  Product share limit constraint
  EQ_SHR_UP
  EQ_SHR_FX
  EQ_PEAK    Peak activity equations
  EQ_ACT_LO  Activity bound constraints
  EQ_ACT_UP
  EQ_ACT_FX
  EQ_IMP_LO  Importation bound constraints
  EQ_IMP_UP
  EQ_IMP_FX
  EQ_EXP_LO  Exportation bound constraints
  EQ_EXP_UP
  EQ_EXP_FX
  EQ_FLO_LO  Flow bound constraints
  EQ_FLO_UP
  EQ_FLO_FX
  EQ_ICAP_LO New capacity bound constraints
  EQ_ICAP_UP
  EQ_ICAP_FX
  EQ_CAP_LO  Capacity bound constraints
  EQ_CAP_UP
  EQ_CAP_FX
  EQ_COM_NET_UP_TS  Net amount bound constraints per time slice 
  EQ_COM_NET_UP_T   Net amount bound constraints per time period
;

EQ_OBJ..
VAR_OBJ =E= VAR_OBJINV + VAR_OBJFIX + VAR_OBJVAR - VAR_OBJSAL;

EQ_OBJINV..
VAR_OBJINV =E= SUM( (T,P), cost_icap(T,P)*VAR_ICAP(T,P)/((1+discount_rate)**(nb_completed_years(T))));

EQ_OBJFIX..
VAR_OBJFIX =E= SUM( (T,P), annualized*cost_fom(T,P)*

* capacity(T,P)
               (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
                VAR_ICAP(T1,P)+fixed_cap(T,P)))

               /((1+discount_rate)**(nb_completed_years(T))) );

EQ_OBJVAR..
VAR_OBJVAR =E= SUM(T, annualized*
    (
      SUM(S,
        SUM(P, cost_vom(T,P) *

* activity[t,s,p]
          SUM(FLOW$FLOW_ACT(P,FLOW),
            SUM(C$C_ITEMS(FLOW,C),
              VAR_COM(T,S,P,C) / act_flo(P,C) ))

        )
       + SUM(IMP, cost_imp(T,S,IMP) * VAR_IMP(T,S,IMP))
       - SUM(EXP, cost_exp(T,S,EXP) * VAR_EXP(T,S,EXP))
       + SUM(P,SUM(C$C_MAP(P,C), cost_delivery(T,S,P,C) * VAR_COM(T,S,P,C) ))
      )
    )
    /((1+discount_rate)**(nb_completed_years(T))));

EQ_OBJSAL..
VAR_OBJSAL =E= SUM(P,SUM(T$( (ord(T) ge avail(P)) and ( (ord(T)+life(P)) gt (nb_periods+1) ) ),
    salvage(T,P)*cost_icap(T,P)*VAR_ICAP(T,P)/((1+discount_rate)**(nb_completed_years(T)))
    ) );

EQ_COMBAL(T,S,C)$(not DEM(C))..
  ( SUM(P$P_PROD(C,P), VAR_COM(T,S,P,C)) + SUM(IMP$IMP(C), VAR_IMP(T,S,IMP)) ) *
    network_efficiency(C)
  =G=
    SUM(P$P_CONS(C,P), VAR_COM(T,S,P,C)) + SUM(EXP$EXP(C), VAR_EXP(T,S,EXP));

EQ_DEMBAL(T,S,DEM)..
   SUM(P$P_PROD(DEM,P), VAR_COM(T,S,P,DEM) )
  =G=
   frac_dem(S,DEM)*demand(T,DEM);

EQ_CAPACT(T,S,P)..
* activity[t,s,p]
   SUM(FLOW$FLOW_ACT(P,FLOW),
     SUM(C$C_ITEMS(FLOW,C),
       VAR_COM(T,S,P,C) / act_flo(P,C) ))
   =L=
   avail_factor(T,S,P)*cap_act(P)*fraction(S)*
* capacity(T,P)
   (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
     VAR_ICAP(T1,P)+fixed_cap(T,P)));

EQ_PTRANS(T,S,P,INFLOW,OUTFLOW)$( (eff_flo(INFLOW,OUTFLOW) gt 0) and FLOW_IN(P,INFLOW) and FLOW_OUT(P,OUTFLOW) )..
  SUM(C$C_ITEMS(OUTFLOW,C), VAR_COM(T,S,P,C) )
  =E=
  eff_flo(INFLOW,OUTFLOW) *
  SUM(C$C_ITEMS(INFLOW,C), VAR_COM(T,S,P,C) );

EQ_SHR_LO(T,S,P,FLOW,C)$( (flo_share_lo(FLOW,C) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) and C_ITEMS(FLOW,C) )..
  VAR_COM(T,S,P,C) =G= flo_share_lo(FLOW,C)*sum(C1$C_ITEMS(FLOW,C1), VAR_COM(T,S,P,C1));

EQ_SHR_UP(T,S,P,FLOW,C)$( (flo_share_up(FLOW,C) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) and C_ITEMS(FLOW,C) )..
  VAR_COM(T,S,P,C) =L= flo_share_up(FLOW,C)*sum(C1$C_ITEMS(FLOW,C1), VAR_COM(T,S,P,C1));

EQ_SHR_FX(T,S,P,FLOW,C)$( (flo_share_fx(FLOW,C) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) and C_ITEMS(FLOW,C) )..
  VAR_COM(T,S,P,C) =E= flo_share_fx(FLOW,C)*sum(C1$C_ITEMS(FLOW,C1), VAR_COM(T,S,P,C1));

EQ_PEAK(T,S,C)$(peak_reserve(T,S,C) ne 0)..
   1/(1+peak_reserve(T,S,C))*(
    SUM(FLOW$C_ITEMS(FLOW,C),
      SUM(P$(P_PROD(C,P) and FLOW_ACT(P,FLOW)),
        cap_act(P)*act_flo(P,C)*peak_prod(P,S,C)*fraction(S)*
* capacity(T,P)
        (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
          VAR_ICAP(T1,P)+fixed_cap(T,P)))
       ) +
      SUM(P$(P_PROD(C,P) and (not FLOW_ACT(P,FLOW))),
        peak_prod(P,S,C)*VAR_COM(T,S,P,C)
      )
    )
    + SUM(IMP$IMP(C),VAR_IMP(T,S,IMP))
   )
   =G=
    SUM(P$P_CONS(C,P), VAR_COM(T,S,P,C) ) +
    SUM(EXP$EXP(C),VAR_EXP(T,S,EXP));

EQ_ACT_LO(T,S,P)$(act_bnd_lo(T,S,P) gt 0)..
* activity[t,s,p]
  SUM(FLOW$FLOW_ACT(P,FLOW),
    SUM(C$C_ITEMS(FLOW,C),
      VAR_COM(T,S,P,C) / act_flo(P,C) ))
=G= act_bnd_lo(T,S,P);

EQ_ACT_UP(T,S,P)$(act_bnd_up(T,S,P) ge 0)..
* activity[t,s,p]
  SUM(FLOW$FLOW_ACT(P,FLOW),
    SUM(C$C_ITEMS(FLOW,C),
      VAR_COM(T,S,P,C) / act_flo(P,C) ))
=L= act_bnd_up(T,S,P);

EQ_ACT_FX(T,S,P)$(act_bnd_fx(T,S,P) ge 0)..
* activity[t,s,p]
  SUM(FLOW$FLOW_ACT(P,FLOW),
    SUM(C$C_ITEMS(FLOW,C),
      VAR_COM(T,S,P,C) / act_flo(P,C) ))
=E= act_bnd_fx(T,S,P);

EQ_IMP_LO(T,S,IMP)$(imp_bnd_lo(T,S,IMP) gt 0)..
VAR_IMP(T,S,IMP) =G= imp_bnd_lo(T,S,IMP);

EQ_IMP_UP(T,S,IMP)$(imp_bnd_up(T,S,IMP) ge 0)..
VAR_IMP(T,S,IMP) =L= imp_bnd_up(T,S,IMP);

EQ_IMP_FX(T,S,IMP)$(imp_bnd_fx(T,S,IMP) ge 0)..
VAR_IMP(T,S,IMP) =E= imp_bnd_fx(T,S,IMP);

EQ_EXP_LO(T,S,EXP)$(exp_bnd_lo(T,S,EXP) gt 0)..
VAR_EXP(T,S,EXP) =G= exp_bnd_lo(T,S,EXP);

EQ_EXP_UP(T,S,EXP)$(exp_bnd_up(T,S,EXP) ge 0)..
VAR_EXP(T,S,EXP) =L= exp_bnd_up(T,S,EXP);

EQ_EXP_FX(T,S,EXP)$(exp_bnd_fx(T,S,EXP) ge 0)..
VAR_EXP(T,S,EXP) =E= exp_bnd_fx(T,S,EXP);

EQ_FLO_LO(T,S,P,FLOW)$( (flo_bnd_lo(T,S,FLOW) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) )..
SUM(C$C_ITEMS(FLOW,C), VAR_COM(T,S,P,C)) =G= flo_bnd_lo(T,S,FLOW);

EQ_FLO_UP(T,S,P,FLOW)$( (flo_bnd_up(T,S,FLOW) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) )..
SUM(C$C_ITEMS(FLOW,C), VAR_COM(T,S,P,C)) =L= flo_bnd_up(T,S,FLOW);

EQ_FLO_FX(T,S,P,FLOW)$( (flo_bnd_fx(T,S,FLOW) gt 0) and (FLOW_IN(P,FLOW) or FLOW_OUT(P,FLOW)) )..
SUM(C$C_ITEMS(FLOW,C), VAR_COM(T,S,P,C)) =E= flo_bnd_fx(T,S,FLOW);

EQ_ICAP_LO(T,P)$(icap_bnd_lo(T,P) gt 0)..
VAR_ICAP(T,P) =G= icap_bnd_lo(T,P);

EQ_ICAP_UP(T,P)$(icap_bnd_up(T,P) ge 0)..
VAR_ICAP(T,P) =L= icap_bnd_up(T,P);

EQ_ICAP_FX(T,P)$(icap_bnd_fx(T,P) ge 0)..
VAR_ICAP(T,P) =E= icap_bnd_fx(T,P);

EQ_CAP_LO(T,P)$(cap_bnd_lo(T,P) gt 0)..
* capacity(T,P)
  (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
    VAR_ICAP(T1,P)+fixed_cap(T,P)))
=G= cap_bnd_lo(T,P);

EQ_CAP_UP(T,P)$(cap_bnd_up(T,P) ge 0)..
* capacity(T,P)
  (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
    VAR_ICAP(T1,P)+fixed_cap(T,P)))
=L= cap_bnd_up(T,P);

EQ_CAP_FX(T,P)$(cap_bnd_fx(T,P) ge 0)..
* capacity(T,P)
  (SUM(T1$( (ord(T1) le ord(T)) and (ord(T1) ge ord(T)-life(P)+1) and (ord(T1) ge avail(P)) ),
    VAR_ICAP(T1,P)+fixed_cap(T,P)))
=E= cap_bnd_fx(T,P);

EQ_COM_NET_UP_TS(T,S,C)$(com_net_bnd_up_ts[t,s,c] ge 0)..
( SUM(P$P_PROD(C,P), VAR_COM(T,S,P,C)) + SUM(IMP$IMP(C),VAR_IMP(T,S,IMP)) ) -
( SUM(P$P_CONS(C,P), VAR_COM(T,S,P,C)) + SUM(EXP$EXP(C),VAR_EXP(T,S,EXP)) )
=L= com_net_bnd_up_ts(T,S,C);

EQ_COM_NET_UP_T(T,C)$(com_net_bnd_up_t[t,c] ge 0)..
SUM(S,
  ( SUM(P$P_PROD(C,P), VAR_COM(T,S,P,C)) + SUM(IMP$IMP(C),VAR_IMP(T,S,IMP)) ) -
  ( SUM(P$P_CONS(C,P), VAR_COM(T,S,P,C)) + SUM(EXP$EXP(C),VAR_EXP(T,S,EXP)) ) )
=L= com_net_bnd_up_t(T,C);

MODEL ETEM /
  EQ_OBJ
  EQ_OBJINV
  EQ_OBJFIX
  EQ_OBJVAR
  EQ_OBJSAL
  EQ_COMBAL
  EQ_DEMBAL
  EQ_CAPACT
  EQ_PTRANS
  EQ_SHR_LO
  EQ_SHR_UP
  EQ_SHR_FX
  EQ_PEAK
  EQ_ACT_LO
  EQ_ACT_UP
  EQ_ACT_FX
  EQ_IMP_LO
  EQ_IMP_UP
  EQ_IMP_FX
  EQ_EXP_LO
  EQ_EXP_UP
  EQ_EXP_FX
  EQ_FLO_LO
  EQ_FLO_UP
  EQ_FLO_FX
  EQ_ICAP_LO
  EQ_ICAP_UP
  EQ_ICAP_FX
  EQ_CAP_LO
  EQ_CAP_UP
  EQ_CAP_FX
  EQ_COM_NET_UP_TS
  EQ_COM_NET_UP_T
/;

SOLVE ETEM USING LP MINIMIZING VAR_OBJ;


*###
*### Output parameters
*###
*
*# Relationship between process activity & individual primary commodity flows
*param activity{t in T,s in S, p in P} := sum{c in C_ITEMS[flow_act[p]]} VAR_COM[t,s,p,c]/act_flo[p,c];
*
*# Capacity transfer
*param capacity{t in T, p in P} := sum{t1 in 1..t : t1>=t-life[p]+1 and t1>=avail[p]} VAR_ICAP[t1,p]+fixed_cap[t,p];
*
*# Commodity production
*param production{t in T, s in S, c in C} := sum{ p in P_PROD[c] inter P } VAR_COM[t,s,p,c];
*
*param consumption{t in T, s in S, c in C} := sum{ p in P_CONS[c] inter P } VAR_COM[t,s,p,c];
*
*# Commodity procurement
*param procurement{t in T, s in S, c in C} := sum{ p in P_PROD[c] } VAR_COM[t,s,p,c] + if c in IMP then VAR_IMP[t,s,c] else 0;
*
*# Commodity disposal
*param disposal{t in T, s in S, c in C} := sum{ p in P_CONS[c] } VAR_COM[t,s,p,c] + if c in EXP then VAR_EXP[t,s,c] else 0;
*
*# Commodity net amount
*param total_net_amount{t in T, s in S, c in C} := procurement[t,s,c] - disposal[t,s,c];
*
*#
*# All outputs
*#
*#
*
*printf "attribute,T,S,P,C,value\n";
*
*#Without index
*printf "VAR_OBJINV,,,,,%f\n", VAR_OBJINV;
*printf "VAR_OBJFIX,,,,,%f\n", VAR_OBJFIX;
*printf "VAR_OBJVAR,,,,,%f\n", VAR_OBJVAR;
*printf "VAR_OBJSAL,,,,,%f\n", VAR_OBJSAL;
*
**#T,P
*for {t in T, p in P}{
*  printf "CAPACITY,%s,,%s,,%f\n", t, p , capacity[t,p];
*}
*
*#T,P
*for {t in T, p in P}{
*  printf "VAR_ICAP,%s,,%s,,%f\n", t , p , VAR_ICAP[t,p];
*}
*
*#T, S, P
*for {t in T, s in S, p in P}{
*  printf "ACTIVITY,%s,%s,%s,,%f\n", t, s, p , activity[t,s,p];
*}
*for {t in T,p in P}{
*  printf "ACTIVITY,%s,ANNUAL,%s,,%f\n", t , p , sum {s in S} activity[t,s,p];
*}
*
*#T, S, C
*for {t in T, s in S, c in IMP}{
*  printf "VAR_IMP,%s,%s,,%s,%f\n", t, s, c, VAR_IMP[t,s,c];
*}
*for {t in T, c in IMP}{
*  printf "VAR_IMP,%s,ANNUAL,,%s,%f\n", t, c, sum {s in S}VAR_IMP[t,s,c];
*}
*for {t in T, s in S, c in EXP}{
*  printf "VAR_EXP,%s,%s,,%s,%f\n", t, s, c, VAR_EXP[t,s,c];
*}
*for {t in T, c in EXP}{
*  printf "VAR_EXP,%s,ANNUAL,,%s,%f\n", t, c, sum {s in S}VAR_EXP[t,s,c];
*}

*#T, S, C
*for {t in T, s in S, c in C}{
*  printf "C_PRICE,%s,%s,,%s,%f\n", t, s, c, EQ_COMBAL[t,s,c].dual;
*}

*#T,S,P,C
*for {t in T, s in S, p in P, c in C_MAP[p]}{
*  printf "VAR_COM,%s,%s,%s,%s,%f\n", t, s, p, c, VAR_COM[t,s,p,c];
*}

*#T,P,C
*for {t in T, p in P, c in C_MAP[p]}{
*  printf "VAR_COM,%s,ANNUAL,%s,%s,%f\n", t, p, c, sum{s in S} VAR_COM[t,s,p,c];
*}

*#CHECK DEMAND
*for {t in T, dem in DEM}{
*  printf "CHK_DEM,%s,,,%s,%f\n", t, dem , sum{s in S, p in P_PROD[dem]} (fixed_cap[t,p]*fraction[s]*cap_act[p]*
*                                                                 avail_factor[t,s,p]*act_flo[p,dem]) - demand[t,dem];
*}

*#T,C
*for {t in T, c in DEM}{
*  printf "DEMAND,%s,ANNUAL,,%s,%f\n", t, c, demand[t,c];
*}

*end;

